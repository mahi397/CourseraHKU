[{"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\App.js":"1","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\MenuComponent.js":"2","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\dishes.js":"4","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\index.js":"5","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\comments.js":"12","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\promotions.js":"13","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\leaders.js":"14","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\comments.js":"17","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\forms.js":"18","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\dishes.js":"19","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\ActionCreators.js":"20","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\promotions.js":"21","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\leaders.js":"22","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\ActionTypes.js":"23"},{"size":548,"mtime":1607404007343,"results":"24","hashOfConfig":"25"},{"size":2198,"mtime":1607663188367,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":1490,"mtime":1607233305863,"results":"28","hashOfConfig":"25"},{"size":639,"mtime":1607175109617,"results":"29","hashOfConfig":"25"},{"size":8013,"mtime":1607663493887,"results":"30","hashOfConfig":"25"},{"size":3159,"mtime":1607664003483,"results":"31","hashOfConfig":"25"},{"size":5651,"mtime":1607316395259,"results":"32","hashOfConfig":"25"},{"size":2852,"mtime":1607230373925,"results":"33","hashOfConfig":"25"},{"size":1117,"mtime":1607234208901,"results":"34","hashOfConfig":"25"},{"size":10978,"mtime":1607530429924,"results":"35","hashOfConfig":"25"},{"size":4279,"mtime":1607233410157,"results":"36","hashOfConfig":"25"},{"size":445,"mtime":1607233347036,"results":"37","hashOfConfig":"25"},{"size":2382,"mtime":1607233374856,"results":"38","hashOfConfig":"25"},{"size":4401,"mtime":1607317943273,"results":"39","hashOfConfig":"25"},{"size":794,"mtime":1607530215162,"results":"40","hashOfConfig":"25"},{"size":505,"mtime":1607452538052,"results":"41","hashOfConfig":"25"},{"size":170,"mtime":1607530106892,"results":"42","hashOfConfig":"25"},{"size":598,"mtime":1607524687947,"results":"43","hashOfConfig":"25"},{"size":3132,"mtime":1607665124005,"results":"44","hashOfConfig":"25"},{"size":683,"mtime":1607662707620,"results":"45","hashOfConfig":"25"},{"size":187,"mtime":1607450528816,"results":"46","hashOfConfig":"25"},{"size":411,"mtime":1607662524746,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1swmwfy",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\reportWebVitals.js",[],["101","102"],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\dishes.js",[],["103","104"],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\index.js",[],["105","106"],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\DishdetailComponent.js",["107","108","109"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'; \r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}><strong>Rating</strong></Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"authorname\" md={12}><strong>Your Name</strong></Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".authorname\" id=\"authorname\" name=\"authorname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".authorname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}><strong>Comment</strong></Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    function RenderComments({comments, addComment, dishId}) {\r\n\r\n        if (comments != null) {\r\n            let list = comments.map((comment)=>{\r\n                return(\r\n                    <li key={comment.id}>\r\n                        <div>\r\n                            <p>{comment.comment}</p>\r\n                            <p>--{comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                        </div>\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return(\r\n                    <div>\r\n                        <h4>Comments</h4>\r\n                        <ul className=\"list-unstyled\">\r\n                            {list}\r\n                        </ul>\r\n                        <CommentForm dishId={dishId} addComment={addComment} />\r\n                    </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    const Dishdetail = (props) => {\r\n        \r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <RenderDish dish={props.dish} />\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-5 m-1\">              \r\n                            <RenderComments comments={props.comments}\r\n                                addComment={props.addComment}\r\n                                dishId={props.dish.id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        } else { \r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\nexport default Dishdetail;","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\HomeComponent.js",[],["110","111"],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\ContactComponent.js",["112","113","114","115","116","117","118","119","120"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                            />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                    /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\promotions.js",[],["121","122"],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\HP\\Desktop\\CourseraHKU\\React\\confusion\\src\\redux\\ActionTypes.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":50,"column":37,"nodeType":"133","endLine":51,"endColumn":66},{"ruleId":"131","severity":1,"message":"134","line":63,"column":37,"nodeType":"133","endLine":69,"endColumn":47},{"ruleId":"131","severity":1,"message":"135","line":84,"column":37,"nodeType":"133","endLine":86,"endColumn":68},{"ruleId":"123","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":3,"column":33,"nodeType":"140","messageId":"141","endLine":3,"endColumn":40},{"ruleId":"142","severity":1,"message":"143","line":62,"column":29,"nodeType":"133","endLine":62,"endColumn":71},{"ruleId":"131","severity":1,"message":"134","line":77,"column":37,"nodeType":"133","endLine":83,"endColumn":47},{"ruleId":"131","severity":1,"message":"134","line":99,"column":37,"nodeType":"133","endLine":105,"endColumn":47},{"ruleId":"131","severity":1,"message":"134","line":121,"column":37,"nodeType":"133","endLine":127,"endColumn":47},{"ruleId":"131","severity":1,"message":"134","line":144,"column":37,"nodeType":"133","endLine":150,"endColumn":47},{"ruleId":"131","severity":1,"message":"144","line":166,"column":45,"nodeType":"133","endLine":168,"endColumn":55},{"ruleId":"131","severity":1,"message":"132","line":174,"column":37,"nodeType":"133","endLine":175,"endColumn":66},{"ruleId":"131","severity":1,"message":"135","line":184,"column":37,"nodeType":"133","endLine":186,"endColumn":68},{"ruleId":"123","replacedBy":"145"},{"ruleId":"125","replacedBy":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],["147"],["148"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],"no-global-assign","no-unsafe-negation"]